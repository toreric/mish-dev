
EMBER/GLIMMER browser input:
evo@discord 2024-10-17 16:51
a very basic example here of the browser behaviour

if you type into the textarea it will stop updating from the setInterval, but if you reset it where the dom is replaced it will begin updating again.

https://codepen.io/evoactivity/pen/qBejBxX


TAR ARCHIVE (backup) search and extraction

SEARCH with zfind for files:
tore@nejlika:/media/tore/SAMSUNG
$ zfind 'name like "abook%"' nejlika-250327-1855VM.tgz
nejlika-250327-1855VM.tgz//home/tore/.thunderbird/tr5gf51h.default-release/abook-1.sqlite-wal
nejlika-250327-1855VM.tgz//home/tore/.thunderbird/tr5gf51h.default-release/abook.sqlite
nejlika-250327-1855VM.tgz//home/tore/.thunderbird/tr5gf51h.default-release/abook.sqlite-wal
nejlika-250327-1855VM.tgz//usr/share/bash-completion/completions/abook

NOTE, about EXTRACTION, that leading slash, like here, will cause:
$ tar -xvzf nejlika-250327-1855VM.tgz --wildcards '/home/tore/.thunderbird/tr5gf51h.default-release/abook*'
tar: /home/tore/.thunderbird/tr5gf51h.default-release/abook*: Fanns inte i arkivet

EXTRACT mainly the same files into directory /media/tore/SAMSUNG/nejlika-250327-1855VM/:
tore@nejlika:/media/tore/SAMSUNG
$ tar -xvzf nejlika-250327-1855VM.tgz --wildcards 'home/tore/.thunderbird/tr5gf51h.default-release/abook*' --one-top-level
home/tore/.thunderbird/tr5gf51h.default-release/abook-1.sqlite-wal
home/tore/.thunderbird/tr5gf51h.default-release/abook.sqlite
home/tore/.thunderbird/tr5gf51h.default-release/abook.sqlite-wal

EXTRACTED automatically, including directory creation, into:
...
/media/tore/SAMSUNG/nejlika-250327-1855VM/home/tore/.thunderbird/tr5gf51h.default-release/abook.sqlite
...  -- but contained no information from the old addressbook!


   SIMPLE PROJECT-COPY EXAMPLE for recovery or testing purposes:
1. Copy PROJECT (mish-dev) to PROJECT-X (mish-dev-extra)
2. Change into this project catalog in the (new) "node-express" script
3. Open PROJECT-X (mish-dev-extra) in the VS Code editor
   Ready to test in a Console instance with correspondingly located tabs!


TEMPORARY for dialog-util et al.:
diff --git a/buildstamp.txt b/buildstamp.txt
index 2e4f6cc..731c4a9 100644
--- a/buildstamp.txt
+++ b/buildstamp.txt
@@ -1 +1 @@
-build 250515-2358 · Not for MS IE ·
+build 250517-2331 · Not for MS IE ·
diff --git a/mish-project/app/components/dialog-util.gjs b/mish-project/app/components/dialog-util.gjs
index 354334a..6df1c0c 100644
--- a/mish-project/app/components/dialog-util.gjs
+++ b/mish-project/app/components/dialog-util.gjs
@@ -33,6 +33,8 @@ export class DialogUtil extends Component {
     if (!elRadio) return; // Not a radio element
       // this.z.loli(`${elRadio.id} ${elRadio.checked}`, 'color:red');
     this.tool = elRadio.id;
+    this.z.loli('tool: ' + this.tool, 'color:red');
+    this.z.loli('noTools: ' + this.noTools, 'color:red');
   }

   clearInput = () => {
@@ -45,7 +47,7 @@ export class DialogUtil extends Component {
   // Reset all at album change. Called from okDelete, which is the first
   // of 'ok...' checks called from the template. 'imdbDir' is used for
   // resetting before the simple return of the sliced imdbDir value:
-  get imdbDir() { // this.imdbDir
+  imdbDir = () => { // this.imdbDir
     this.tool = '';
     this.noTools = true;
     let elRadio = document.querySelectorAll('#dialogUtil input[type="radio"]');
@@ -56,11 +58,11 @@ export class DialogUtil extends Component {
     return this.z.imdbDir.slice(1);
   }

-  get imdbDirName() {
+  dirName = () => {
     return this.z.handsomize2sp(this.z.imdbDirName);
   }

-  get label() {
+  label = () => {
     let text = document.querySelector('#dialogUtil label[for=' + this.tool + ']').innerTHTML;
       this.z.loli(this.tool + ': ' + text, 'color:red');
     return text;
@@ -68,13 +70,13 @@ export class DialogUtil extends Component {

   // This button is inserted into alertMess when browser reload is required.
   // Then alertMess cannot be closed by closeDialog (but with closeDialogs!).
...skipping...
diff --git a/mish-project/app/components/menu-image.gjs b/mish-project/app/components/menu-image.gjs
index a525eb0..c107d8e 100644
--- a/mish-project/app/components/menu-image.gjs
+++ b/mish-project/app/components/menu-image.gjs
@@ -344,6 +344,9 @@ export class MenuImage extends Component {
     return;
   }

+  // Deletes a single checked, or a number of checked images. If ALL are symlinks
+  // and a certain checkbox is checked, the files LINKED FROM are ALSO DELETED,
+  // which may be convenient for caefully cleaning out duplicates.
   eraseFunc = async () => {
     let fromIndex = this.z.imdbDirIndex;
       // this.z.loli(this.z.picName, 'color:red');
@@ -499,11 +502,19 @@ export class MenuImage extends Component {
         let n = imgs.length - errNames.length;
         let a = this.z.imdbDir;
         a = a ? this.z.handsomize2sp(a.replace(/^.*\/([^/]+)$/, '$1')) : this.z.imdbRoot;
-        let mesTxt = this.z.intl.t('write.doErased', {n: n, a: a});
+        let tmp = '';
+        if (n === 1) {
+          tmp = this.intl.t('write.doErased1', {a: a});
+          if (document.getElementById('Choice_3').checked === true) tmp += '<br><span style="color:#df1837">' + this.intl.t('write.doEraOri1') + '</span>';
+        }
+        else {
+          tmp = this.intl.t('write.doErased', {n: n, a: a});
+          if (document.getElementById('Choice_3').checked === true) tmp += '<br><span style="color:#df1837">' + this.intl.t('write.doEraOri') + '</span>';
+        }
         if (errNames.length) {
-          mesTxt += '<br><br>' + this.z.intl.t('write.noErased', {n: errNames.length, a: errNames.join(', ')});
+          tmp += BR + BR + this.z.intl.t('write.noErased', {n: errNames.length, a: errNames.join(', ')});
         }
-        this.z.alertMess(mesTxt);
+        this.z.alertMess(tmp);
         // Refresh the album tree:
         let selEl = document.getElementById('rootSel');
         selEl.value = this.z.imdbRoot;
@@ -713,7 +724,10 @@ export class ChooseAlbum extends Component {
...skipping...
diff --git a/mish-project/app/services/common-storage.js b/mish-project/app/services/common-storage.js
index 153fd76..d60592b 100644
--- a/mish-project/app/services/common-storage.js
+++ b/mish-project/app/services/common-storage.js
@@ -366,7 +366,7 @@ export default class CommonStorageService extends Service {
   openAlbum = async (i) => {
     this.picName = '';
     // Close dialogs without reuse potential:
-    this.closeDialog('dialogAlert');
+    // this.closeDialog('dialogAlert');
     this.closeDialog('dialogChoose');
     this.closeDialog('dialogInfo');
     this.closeDialog('dialogText');
@@ -685,6 +685,7 @@ export default class CommonStorageService extends Service {
   // So far, the albumTree in the menuMain is not updated!
   countNumbers = async () => {
     await new Promise (z => setTimeout (z, 129)); // countNumbers
+    this.numImages = document.querySelectorAll('.img_mini').length;
     this.numMarked = document.querySelectorAll('.img_mini.selected').length;
     this.numHidden = document.querySelectorAll('.img_mini.hidden').length;
     await new Promise (z => setTimeout (z, 29)); // countNumbers
@@ -702,11 +703,10 @@ export default class CommonStorageService extends Service {
     if (this.numImages !== this.numShown + this.numInvisible) {
       // If the total number of images in the open album (numImages) isn't correctly
       // updated at deletion/addition of images, one has to reload it, since the count
-      // is made elsewhere only in openAlbum.It may be done by pressing the reload
-      // button with "document.getElementById('reLd').click();" or directly like here:
-      this.alertMess(this.intl.t('numbererror'), 0.25);
+      // is made elsewhere in openAlbum.It may be done by pressing the reload button
+      // with "document.getElementById('reLd').click();" or directly like here:
       // this.openAlbum(this.imdbDirIndex); // Reloads current album
-      // To have this log printout correct some awaiting would probably be required:
+      this.alertMess(this.intl.t('numbererror'), 0.25);
       this.loli('shown:' + this.numShown + ' + invisible:' + this.numInvisible + ' != sum:' + this.numImages, 'color:red');
     }
   }
diff --git a/mish-project/translations/de-de.yaml b/mish-project/translations/de-de.yaml
index 8f0f28a..02f2927 100644
--- a/mish-project/translations/de-de.yaml
+++ b/mish-project/translations/de-de.yaml
@@ -338,9 +338,14 @@ write:
   description: "Beschreibung: Wann wo was welche"
   dbUpdated: Textsuchdatenbank aktualisiert
   dialogDupResult: Suche nach doppelten Namen in <b>{a}</b>
-  doErased: "{n} Bild(er) aus ”{a}” entfernt"
-  doLinked: "{n} Bild(er) zu ”{a}” verlinkt"
-  doMoved:  "{n} Bild(er) zu ”{a}” verschiebt"
+  doEraOri:  "HINWEIS: Einschließlich der Originalbilder!"
+  doEraOri1: "HINWEIS: Originalbild inklusive!"
+  doErased: "{n} Bilder aus ”{a}” entfernt"
+  doErased1: Ein Bild aus ”{a}” entfernt
+  doLinked: "{n} Bilder zu ”{a}” verlinkt"
+  doLinked1: Ein Bild aus ”{a}” verlinkt
+  doMoved:  "{n} Bilder zu ”{a}” verschiebt"
+  doMoved1:  Ein Bild zu ”{a}” verschiebt
   eraseFunc: LÖSCHEN von Originalbildern kann nicht rückgängig gemacht werden
   eraseFunc1: ", gelöschte verlinkte Bilder (Links) können jedoch neu erstellt werden"
   eraseOption: "OPTION und AUSNAHME: Originalbilder löschen"
@@ -393,7 +398,7 @@ write:
   setBeep: Piepton bei Mausklicks
   setPoop: Mausklicks visualisieren
   setEraseOriginal: Original mit Link löschen (WARNUNG!)
-  tool0: "Für <b>{album}</b> wählen:"
+  tool0: "Für <b>{a}</b> wählen:"
   tool1: Das Album löschen (muss leer sein)
   tool2: Ein Unteralbum erstellen
   tool3: Die Bilder nach Namen sortieren
diff --git a/mish-project/translations/en-us.yaml b/mish-project/translations/en-us.yaml
index 1da91b3..b92bbc8 100644
--- a/mish-project/translations/en-us.yaml
+++ b/mish-project/translations/en-us.yaml
@@ -340,9 +340,14 @@ write:
   dbUpdated: Text search database updated
   description: 'Caption: When Where What Who'
   dialogDupResult: Duplicate name search in <b>{a}</b>
-  doErased: Removed {n} image(s) from “{a}”
-  doLinked: Linked {n} image(s) to ”{a}”
-  doMoved:  Moved {n} image(s) to ”{a}”
+  doEraOri:  "NOTE: Including the original images!"
+  doEraOri1: "NOTE: Including the original image!"
+  doErased:  Removed {n} images from “{a}”
+  doErased1: Removed an image from ”{a}”
+  doLinked:  Linked {n} images to ”{a}”
+  doLinked1: Linked an image to ”{a}”
+  doMoved:   Moved {n} images to ”{a}”
+  doMoved1:  Moved an image to ”{a}”
   eraseFunc: DELETING original images cannot be undone
   eraseFunc1: ", but deleted linked images (links) can be recreated"
   eraseOption: "OPTION and EXCEPTION: Delete original images"
@@ -395,7 +400,7 @@ write:
   setBeep: Beep at mouse clicks
   setPoop: Visualize mouse clicks
   setEraseOriginal: Erase original with link (WARNING!)
-  tool0: "Choose for <b>{album}</b>:"
+  tool0: "Choose for <b>{a}</b>:"
   tool1: Delete the album (must be empty)
   tool2: Make a subalbum
   tool3: Sort the images by names
diff --git a/mish-project/translations/sv-se.yaml b/mish-project/translations/sv-se.yaml
index dba2c54..5b53d82 100644
--- a/mish-project/translations/sv-se.yaml
+++ b/mish-project/translations/sv-se.yaml
@@ -338,9 +338,14 @@ write:
   dbUpdated: Textsökningsdatabasen uppdaterad
   description: "Beskrivning: När var vad vilka"
   dialogDupResult: Dublettnamnsökning i <b>{a}</b>
-  doErased: Tog bort {n} bild(er) från ”{a}”
-  doLinked: Länkade {n} bild(er) till ”{a}”
-  doMoved:  Flyttade {n} bild(er) till ”{a}”
+  doEraOri:  "OBS: Inklusive originalbilderna!"
+  doEraOri1: "OBS: Inklusive originalbilden!"
+  doErased:  Tog bort {n} bilder från ”{a}”
+  doErased1: Tog bort en bild från ”{a}”
+  doLinked:  Länkade {n} bilder till ”{a}”
+  doLinked1: Länkade en bild till ”{a}”
+  doMoved:   Flyttade {n} bilder till ”{a}”
+  doMoved1:  Flyttade en bild till ”{a}”
   eraseFunc: RADERING av originalbilder kan inte ångras
   eraseFunc1: ", men raderade inlänkade bilder (länkar) kan återskapas"
   eraseOption: "TILLVAL och UNDANTAG: Radera originalbild"
@@ -393,7 +398,7 @@ write:
   setBeep: Pip vid musklick
   setPoop: Visualisera musklick
   setEraseOriginal: Radera original med länk (VARNING!)
-  tool0: "Välj för <b>{album}</b>:"
+  tool0: "Välj för <b>{a}</b>:"
   tool1: Radera albumet (måste vara tomt)
   tool2: Gör ett underalbum
   tool3: Sortera bilderna efter namn
